apiVersion: maestro/v1alpha1
kind: Workflow
metadata:
  name: cbom.ai
  labels:
    app: cbom.ai
spec:
  template:
    metadata:
      labels:
        app: cbom.ai
    agents:
      - gh fetch
      - gh reader
      - identify post-quantum
      - component creator
      - BOM Assembler
      - score
      - fixer-agent
      - patcher-agent
    prompt: |
      Use the git fetcher tool to get all the java files from the github repo where the owner is "Mastercard" and the repo is "client-encryption-java", and directly output its result. The output should be *ONLY* a list of URLs, and nothing else.
    steps:
    - name: step1
      agent: gh fetch
    - name: step2
      agent: gh reader
    - name: step3
      agent: identify post-quantum
    - name: step4
      agent: component creator
    - name: step5
      agent: BOM Assembler
    - name: final_score
      agent: score
      inputs: 
        - from: "Given the components and headers, assemble them to create a structurally valid CBOM. It is ok to have placeholders, but the JSON must be valid."
        - from: step5
      context:
        - "A correct output should be a json that is structurally valid. Additionally, the CBOM itself should contain libraries themselves that are not quantum safe, which is why it is added to the CBOM. It is ok to have placeholders for missing information within the CBOM itself."
    - name: code_step
      agent: fixer-agent
    - name: patch_pull_step
      agent: patcher-agent